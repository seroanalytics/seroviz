#!/usr/bin/env bash
set -e

if [ "$#" -eq 1 ]; then
    export HTTP_HOST=$1
else
    echo "Usage: HOSTNAME"
    echo "e.g. docker run ... seroviz.seroanalytics.org"
    exit 1
fi

echo "We will listen on ports 80 (http) and 443 (https)"
echo "with hostname $HTTP_HOST"

envsubst '$HTTP_HOST' \
         < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf

# These paths must match the paths as used in the nginx.conf
PATH_CONFIG=/run/proxy
PATH_CERT="$PATH_CONFIG/certificate.pem"
PATH_KEY="$PATH_CONFIG/key.pem"
PATH_DHPARAM="$PATH_CONFIG/dhparam.pem"

mkdir -p $PATH_CONFIG

# We'll copy this one directly into place - if the user wants to
# override it they should just copy theirs in place before the
# certificate.
cp /usr/local/share/ssl/dhparam.pem $PATH_DHPARAM

if [[ -v "SSL_KEY" ]]; then
  echo "Found SSL_KEY in env. Copying into place."
  echo "$SSL_KEY" > $PATH_KEY
  chmod 600 $PATH_KEY
fi

if [[ -v "SSL_CERT" ]]; then
  echo "Found SSL_CERT in env. Copying into place."
  echo "$SSL_CERT" > $PATH_CERT
  chmod 644 $PATH_CERT
fi

while [ ! -e $PATH_CERT ] || [ ! -e $PATH_KEY ]; do
  # Wait for the ssl certificates to be copied in or generated
  echo "Waiting for certificates at $PATH_CERT and $PATH_KEY"
  sleep 1
done

echo "Certificate files detected. Running nginx"
exec nginx -g "daemon off;"
